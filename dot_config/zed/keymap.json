[
    //========================================================================
    // Global Bindings
    //========================================================================
    {
        "bindings": {
            "ctrl-h": "workspace::ActivatePaneLeft",
            "ctrl-l": "workspace::ActivatePaneRight",
            "ctrl-j": "workspace::ActivatePaneDown",
            "ctrl-k": "workspace::ActivatePaneUp"
        }
    },
    {
        "context": "(Editor && vim_mode == normal && !Terminal) || (EmptyPane && !Terminal) || (SharedScreen && !Terminal)",
        "bindings": {
            // File Finder & Project Management
            "space f f": "file_finder::Toggle",
            "space f p": "projects::OpenRecent",
            "space f g": "workspace::NewSearch",
            "space f b": "tab_switcher::Toggle",
            // Panel & Dock Toggles
            "space p p": "project_panel::ToggleFocus",
            "space g g": "git_panel::ToggleFocus",
            // Git Commands (global)
            "space g c": "git::Commit",
            "space g P": "git::Pull",
            "space g p": "git::ForcePush",
            "space g b": "git::Branch",
            "space g i": "git::Init",
            // Agent Commands (global)
            "space a a": "workspace::ToggleRightDock",
            "space a n": "agent::NewThread",
            "space a h": "agent::OpenHistory",
            // Terminal Commands (global)
            "space d d": "workspace::ToggleBottomDock",
            // LSP Diagnostics (global)
            "space l l": "lsp_tool::ToggleMenu"
        }
    },
    //========================================================================
    // Editor-Specific Bindings
    //========================================================================
    {
        "context": "Editor && vim_mode == normal && !Terminal && !menu",
        "bindings": {
            // Unset default Vim keys
            "/": null,
            "#": null,
            ".": null,
            "shift-y": ["workspace::SendKeystrokes", "y $"],
            "shift-k": "editor::Hover",
            ":": "command_palette::Toggle",
            "?": "command_palette::Toggle",
            // Search & Replace
            "space /": "vim::Search",
            "space r r": "editor::SelectAllMatches",
            // Buffer/Tab management
            "space d b": [
                "pane::CloseActiveItem",
                {
                    "close_pinned": false
                }
            ],
            "space s": "outline::Toggle",
            "space S": "project_symbols::Toggle",
            // Code Actions & Diagnostics
            "space c c": "editor::ToggleCodeActions",
            "space t d": "diagnostics::Deploy",
            // Code Navigation
            "g d": "editor::GoToDefinition",
            "g D": "editor::GoToDefinitionSplit",
            "g t": "editor::GoToTypeDefinition",
            "g T": "editor::GoToTypeDefinitionSplit",
            // Git commands (editor-contextual)
            "space g a": "git::Add",
            "space g A": "git::StageAll",
            "space g u": "git::UnstageAll",
            "space g d": "git::Diff",
            // AI Assistant (editor-contextual)
            "space a i": "assistant::InlineAssist",
            "space a q": "agent::QuoteSelection", // Shared action
            // Debugger Controls (editor-contextual)
            "space d t": "editor::ToggleBreakpoint",
            "space d s": "debugger::Start",
            "space d c": "debugger::Continue",
            "space d S": "debugger::Stop"
        }
    },
    {
        "context": "Editor && vim_mode == visual && !menu && !Terminal",
        "bindings": {
            "shift-j": "editor::MoveLineDown",
            "shift-k": "editor::MoveLineUp",
            "space a i": "assistant::InlineAssist"
        }
    },
    //========================================================================
    // Context-Specific Panel Bindings
    //========================================================================
    {
        "context": "AgentPanel && vim_mode == normal",
        "bindings": {
            "space a n": "agent::NewThread",
            "space a p": "agent::ToggleProfileSelector",
            "space a c": "agent::ToggleContextPicker",
            "space a e": "agent::ExpandMessageEditor",
            "space a a": "workspace::ToggleRightDock",
            "space a m": "agent::ToggleModelSelector"
        }
    },
    {
        "context": "vim_mode == normal && Editor && extension == md",
        "bindings": {
            "space m p": "markdown::OpenPreviewToTheSide",
            "space m P": "markdown::OpenPreview"
        }
    },
    {
        "context": "vim_mode == normal && Editor && extension == tex",
        "bindings": {
            "space /": [
                "task::Spawn",
                {
                    "task_name": "forward_search"
                }
            ],
            "space l P": [
                "task::Spawn",
                {
                    "task_name": "pdflatex_view"
                }
            ],
            "space l p": [
                "task::Spawn",
                {
                    "task_name": "latexmk_view"
                }
            ]
        }
    },
    {
        "context": "MessageEditor > Editor && vim_mode == normal",
        "bindings": {
            "enter": "agent::Chat",
            "space a d": "agent::OpenAgentDiff"
        }
    },
    {
        "context": "AgentDiff",
        "bindings": {
            "k": "agent::Keep",
            "r": "agent::Reject",
            "shift-k": "agent::KeepAll",
            "shift-r": "agent::RejectAll"
        }
    },
    {
        "context": "ProjectPanel && not_editing",
        "bindings": {
            "h": "project_panel::CollapseSelectedEntry",
            "l": "project_panel::ExpandSelectedEntry",
            "j": "menu::SelectNext",
            "k": "menu::SelectPrevious",
            "o": "menu::Confirm"
        }
    },
    {
        "context": "GitPanel && ChangesList",
        "bindings": {
            "space g g": "git_panel::Close"
        }
    },
    {
        "context": "Terminal",
        "bindings": {
            "<Esc>": "workspace::ToggleBottomDock"
        }
    },
    //========================================================================
    // Menus
    //========================================================================
    {
        "context": "Editor && (showing_code_actions || showing_completions)",
        "bindings": {
            "tab": "editor::ContextMenuNext",
            "shift-tab": "editor::ContextMenuPrevious"
        }
    }
]
